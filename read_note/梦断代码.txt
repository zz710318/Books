梦断代码 Scoott Rosenberg 韩磊 译
1、软件技术日新月异，软件项目领导的艺术也是日新月异。如同开发者不断把自己的代码当做艺术品来雕琢一样，组织好一群天才开发者，则更是艺术中的艺术。
软件开发者不是堆砌代码的工人，也无法安于命令式的任务布置。这些天才开发者们，低调、寡言、有独立的自我意识，他们并不迷恋于成为焦点的感觉，但却十分沉迷于自己认为伟大的创造。天才们在一起的合作，貌似创意无穷，实则合力有限；貌似独当一面，实则整合艰难。等等诸多问题，似乎成了很多国内外软件企业的通病。
真正的领导者，实际上早已被要求有着化不可控为可控、化不同愿景为共同愿景、激发天才们最大潜能的能力。这对于整个项目而言，这样的图景绝不应该止于一个美好愿景，尽管难上加难，但在所有开发者和经理们的努力下，我坚信一定可以实现。     --Discuz！创始人 康盛创想（北京）科技有限公司总裁 戴志康  2008/06
2、20世纪90年代科技行业的兴盛给我们带来了“互联网时间”的概念。对该短语含义的理解见仁见智，但多指“快速”之意。数字时代的新时间机制下，一切皆有可能发生--技术产生、公司创立、创造财富--而且速度惊人。这意味着你没时间做到尽善尽美--无须担心，因为别人也一样。
3、如果一切顺利，你会沉浸在心理学家称之为“流逝”的状态中，全然忘记了时间。
4、“Hello World”程序一无所用，但足可蛊惑人心；它鼓励新手，唤起每个程序员心中乐观的一面。既然能叫它说话，就能让它干任何事！
5、程序员一直陷于调试除错之苦境。工作中只有百分之一的灵感迸发，剩下的是艰难寻找、汗湿重衣；他们的作品永远尚未完成或者未臻至善，区别仅仅是“问题更少”的程度不同罢了。
6、所谓“人月”，是一种科学管理概念，它假定生产力被拆分成为不连续、无差异、可替换的单元。 实际上，只有在任务能分派给许多相互之间无需沟通的工作时，人和月才是可互换品。
7、好程序员懂得写什么，卓越的程序员懂得改写（复用）什么。
8、眼球足够多，缺陷无处躲。
9、开源本身，即让程序员学习和扩展源代码的可能性。（乐享既能高效）
10、这就是硅谷不断自我更新的方式，就像一片森林：技术工业如植物般周期性地生长然后枯萎，在前一轮生长其中诞生的公司消失后，新公司就在它们留下的空地上萌芽。
11、Welcome to Howard Street   -->   We come to ward three    -->    We come to toward thee 吾等形向你处
12、“愉悦是金”艾瑞克.瑞蒙德写到。“开源的成功告诉我们，对于创造性工作，玩耍是最经济有效的模式”
13、听得多了，就会觉得这话天真得让人难以置信。不过，Chandler项目组成员们--和所有其他软件开发者一样--都抱着自己的工作能改变人们生活的期望投入开发。或许，这种大多数程序员所共有的理想主义直接源自变成的辛劳和挫败。与令人畏惧的抽象建模较劲，或者面对蜂拥而至的缺陷大军，唯有万张雄心能助你艰难前行。 
14、程序员就像是诗人，他的工作几乎全是纯思考，弗里德里克.布鲁克斯写到，“他运用想象，凭空造出城堡。唯有想象才如此灵活，如此易于琢磨和重塑，如此适与构思宏达的概念性架构”。
类似与莎士比亚《仲夏夜之梦》：
疯子、爱侣和诗人，
一总都是幻想造...
诗人的眼珠疯狂一转，
看尽天上人间，人间天上；
想象催生未知之物，
诗人的笔管
赋其形状，使空者无
也有了居所和名字
15、构建软件系统最难的就是没有精确设定要做什么东西 --《没有银弹》
16、前台应该精致、直观、功能强大；后台应该隐形、高效、如顽石般坚强。前台与人对话；后台与比特对话。
17、我们打算尽可能多的复用现有的代码，少写新代码。要加快工作进程，就得尽量避免踏入新的编码地带。
18、创建、购买还是借用
19、程序员总以创作为荣，叫他们拾人牙慧，无异于拂其逆鳞。
20、牛仔程序员：不守规矩、偏好都干、喜欢挑战的程序员；对于许多经理来说，牛仔程序员简直就是噩梦，但是在许多程序员眼里他们却是英雄。
21、程序员是顽固的独行侠。老调重弹不足以促其成事；他们需要哄逗和抚爱，要有耗子可以追杀，要有缺陷可以荡涤。
22、必须依序执行。决定推迟某些特性，项目才能称其为项目。所有同事同时开干并非明智之举。
23、管理的任务就是让人能协同工作，益其长处，弱其短处。
24、管理艺术胜过管理科学，对人的关注胜过对定量的关注。  管理，全与人有关。
25、软件项目管理中存在一种充满讽刺意味的天性，尽管程序员工作时所用的计算机和编程语言都要求精确缜密，但软件编写工作却奇怪的对绩效考量有抵抗力。数十年以来，程序经理们尽力寻找一种准确的方法来测量该领域的生产力。程序员每天的工作成果是代码，而软件生产力最明显的量尺也是代码行。然而这量尺却不能令人满意，有时甚至具有欺骗性。诺博尔和毕多在研究可复用软件现象时发现，代码行各有不同。在代码量和程序完成度、质量以及对用户的价值之间，并无可靠的关联关系。